
  docker pull redis
   docker run -d --name redis-assg2 redis

   docker run -d -p 6379:6379 --name redis_assign2 redis

   docker run -it --link redis-assg2:redis --name redisclient1 busybox

    docker run --name mysql-assg2 -e MYSQL_ROOT_PASSWORD='root' -d mysql/mysql-server:latest

   docker build -t cmpe273assg2_client1 .

   docker run --name assg2_client1 --link mysql-assg2:mysql -d -p 5000:5000 cmpe273assg2_client1

docker run --name assg2_client2 --link mysql-assg2:mysql -d -p 5001:5000 cmpe273assg2_client1

   docker run --name web-app1-client1 --link mysql-assg2:mysql -v /my/own/datadir:/var/lib/mysql --link redis_assign2:redis \
    -e WEB_HOST="192.168.99.100" -e WEB_PORT="5000" -d -p  3000:5000 cmpe273_assignment2_webapp

    docker run \
    --link mysql-assg2:mysql -v /my/own/datadir:/var/lib/mysql \
    --link redis_assign2:redis \
    -e WEB_HOST="192.168.99.100" -e WEB_PORT="3002" \
    -d -p  3002:5000 amz




steps :

run mysql on diff container

run redis on diff container

build ur app and run it ..while running link it to mysql and redis


# to set environemtn avrable in docker run and read htat in python
-e is correct e.g., docker run --rm -e ENV=1 python python -c 'import os; print(os.environ["ENV"])'

#get inside running container
docker exec -it 66a9f5a52e7d bash

redis-cli opens redis in redis docker


$ docker run --name some-mysql -v /my/own/datadir:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag

def run_server(dom):
        _run_on_start("%s" % dom)
        app.run(debug=True, use_reloader=False)

if __name__ == '__main__':
    if len(sys.argv) < 2:
        raise Exception("Must provide domain for application execution.")
    else:
        DOM = sys.argv[1]
        run_server(DOM)


 # forward runner
 docker run --name sample-proxy-server -d -p 5555:5000
 -e WEB_HOST="192.168.99.100" -e WEB_PORT="5000" sample-proxy